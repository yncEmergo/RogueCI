name: Unity Build üèóÔ∏è

on: push

jobs:
  determine_unity_version:
    runs-on: ubuntu-latest
    outputs:
      unityVersion: ${{ steps.set_version.outputs.unity_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Extract Unity Version
        id: set_version
        run: |
          version=$(grep 'm_EditorVersion:' ProjectSettings/ProjectVersion.txt | cut -d ' ' -f2)


  testAllModes:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    env:
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - '.'
        testMode:
          - playmode
          - editmode
          - standalone
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-
      - uses: game-ci/unity-test-runner@v4
        id: tests
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}
    
  
  windows_build_x64:
    needs: determine_unity_version
    runs-on: ubuntu-latest
    env:
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Cache Library
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/Library
          key: Library-${{ hashFiles('**/ProjectSettings/ProjectVersion.txt') }}
          restore-keys: Library-

      - name: Build Unity Project for Windows x64
        uses: game-ci/unity-builder@v2
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          unityVersion: ${{ needs.determine_unity_version.outputs.unityVersion }}
          targetPlatform: StandaloneWindows64
          projectPath: '.'

      - name: Upload Build Artifacts for Windows x64
        uses: actions/upload-artifact@v2
        with:
          name: UnityBuild-Windows
          path: build/StandaloneWindows64/

  android_build:
    needs: determine_unity_version
    runs-on: ubuntu-latest
    env:
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Library
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/Library
          key: Library-${{ hashFiles('**/ProjectSettings/ProjectVersion.txt') }}
          restore-keys: Library-

      - name: Build Unity Project for Android
        uses: game-ci/unity-builder@v2
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          unityVersion: ${{ needs.determine_unity_version.outputs.unityVersion }}
          targetPlatform: Android
          projectPath: '.'

      - name: Upload Build Artifacts for Android
        uses: actions/upload-artifact@v2
        with:
          name: UnityBuild-Android
          path: build/Android/

  webgl_build:
    needs: determine_unity_version
    runs-on: ubuntu-latest
    env:
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Library
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/Library
          key: Library-${{ hashFiles('**/ProjectSettings/ProjectVersion.txt') }}
          restore-keys: Library-

      - name: Build Unity Project for WebGL
        uses: game-ci/unity-builder@v2
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          unityVersion: ${{ needs.determine_unity_version.outputs.unityVersion }}
          targetPlatform: WebGL
          projectPath: '.'

      - name: Upload Build Artifacts for WebGL
        uses: actions/upload-artifact@v2
        with:
          name: UnityBuild-WebGL
          path: build/WebGL/
